<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>荷包蛋</title>
  <icon>https://www.gravatar.com/avatar/15344a69e13c072a72e782171c89f56d</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/"/>
  <updated>2017-12-27T01:22:43.099Z</updated>
  <id>https://github.com/hzxblogs/hzxblogs.github.io.git/</id>
  
  <author>
    <name>Blog for Y</name>
    <email>hzxxn@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>项目部署（三）Centos虚拟机与主机互PING</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%B8%89%EF%BC%89Centos%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8E%E4%B8%BB%E6%9C%BA%E4%BA%92ping%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/项目部署（三）Centos虚拟机与主机互ping问题/</id>
    <published>2017-12-27T01:22:57.901Z</published>
    <updated>2017-12-27T01:22:43.099Z</updated>
    
    <content type="html"><![CDATA[<p>虚拟机只有能与宿主机互相连接ftp，能在宿主机向虚拟机传输文件才能更方便的处理问题，比如安装oracle，weblogic等等。<br><a id="more"></a></p><blockquote><ul><li><strong>环境说明</strong> </li></ul></blockquote><hr><p>首先虚拟机要这么配置，虚拟机的安装，要选择桥接模式。具体请参照我的项目部署第一篇博客，<br><a href="https://hzxblogs.github.io/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%B8%80%EF%BC%89%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">https://hzxblogs.github.io/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%B8%80%EF%BC%89%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85/</a></p><hr><blockquote><ul><li><strong>VMWare提供三种工作模式介绍</strong> </li></ul></blockquote><hr><pre><code>1、在桥接模式下，VMWare虚拟出来的操作系统就像是局域网中的一台独立的主机（主机和虚拟机处于对等地位），它可以访问网内任何一台机器。在桥接模式下，我们往往需要为虚拟主机配置ＩＰ地址、子网掩码等（注意虚拟主机的ｉｐ地址要和主机ｉｐ地址在同一网段）。2、在NAT模式下，虚拟系统需要借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。也就是说，使用NAT模式虚拟系统可把物理主机作为路由器访问互联网。NAT模式下的虚拟系统的TCP/IP配置信息是由VMnet8(NAT)虚拟网络的DHCP服务器提供的，无法进行手工修改，因此虚拟系统也就无法和本局域网中的其他真实主机进行通讯。采用NAT模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机器能访问互联网即可。这种方式也可以实现Host OS与Guest OS的双向访问。但网络内其他机器不能访问Guest OS，Guest OS可通过Host OS用NAT协议访问网络内其他机器。NAT方式的IP地址配置方法是由VMware的虚拟DHCP服务器中分配一个IP ，在这个IP地址中已经设置好路由，就是指向192.168.138.1的。如果你想利用VMWare安装一个新的虚拟系统，在虚拟系统中不用进行任何手工配置就能直接访问互联网，建议你采用NAT模式。这种方式下host内部出现了一个虚拟的网卡vmnet8（默认情况下），如果你有过 做nat服务器的经验，这里的vmnet8就相当于连接到内网的网卡，而虚拟机本身则相当于运 行在内网上的机器，虚拟机内的网卡（eth0）则独立于vmnet8。你会发现在这种方式下，vmware自带的dhcp会默认地加载到vmnet8界面上，这样虚拟机就可以使用dhcp服务。更为重要的是，vmware自带了nat服务，提供了从vmnet8到外网的地址转 换，所以这种情况是一个实实在在的nat服务器在运行，只不过是供虚拟机用的。很显然，如果你只有一个外网地址，此种方式很合适。3、主机模式下，真实环境和虚拟环境是隔离开的；在这种模式下，所有的虚拟系统是可以相互通信的，但虚拟系统和真实的网络是被隔离开。（虚拟系统和宿主机器系统是可以相互通信的，相当于这两台机器通过双绞线互连。）这应该是最为灵活的方式，有兴趣的话可以进行各种网络实验。和nat唯一的不同的是，此种方式下，没有地址转换服务，因此，默认情况下，虚拟机只能到主机访问。</code></pre><hr><blockquote><ul><li><strong>选择桥接模式，查询主机网络参数</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\MelodyFair&gt;ipconfig</span><br></pre></td></tr></table></figure><p>显示：<br>无线局域网适配器 WLAN:<br>   连接特定的 DNS 后缀 . . . . . . . : DHCP HOST<br>   本地链接 IPv6 地址. . . . . . . . : fe80::d532:11b3:c69b:602f%2<br>   IPv4 地址 . . . . . . . . . . . . : 192.168.1.101<br>   子网掩码  . . . . . . . . . . . . : 255.255.255.0<br>   默认网关. . . . . . . . . . . . . : 192.168.1.1</p><hr><blockquote><ul><li><strong>在centos虚拟机中修改网络配置</strong> </li></ul></blockquote><hr><p>有的人因为版本不同，网络配置文件是不同名字的文件，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-ens33  </span><br><span class="line">TYPE=Ethernet  </span><br><span class="line">BOOTPROTO=static  </span><br><span class="line">IPADDR=192.168.1.116  #要与主机在一个网段</span><br><span class="line">NETMASK=255.255.255.0  #掩码与主机一直</span><br><span class="line">GATEWAY=192.168.1.1    #一般都是前面三位与ip地址相同，最后一位是1</span><br><span class="line">DNS1=8.8.8.8 </span><br><span class="line">DNS2=114.114.114.114  </span><br><span class="line">DEFROUTE=yes  </span><br><span class="line">PEERDNS=yes  </span><br><span class="line">PEERROUTES=yes  </span><br><span class="line">IPV4_FAILURE_FATAL=no  </span><br><span class="line">IPV6INIT=yes  </span><br><span class="line">IPV6_AUTOCONF=yes  </span><br><span class="line">IPV6_DEFROUTE=yes  </span><br><span class="line">IPV6_PEERDNS=yes  </span><br><span class="line">IPV6_PEERROUTES=yes  </span><br><span class="line">IPV6_FAILURE_FATAL=no  </span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy  </span><br><span class="line">NAME=eth0  </span><br><span class="line">UUID=972a1eb3-049f-4db2-80f5-7d8fd28ef76f  </span><br><span class="line">DEVICE=eth0  </span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure></p><p>各参数意义如下：<br>DEVICE是网卡名称<br>BOOTPROTO是获取的ip地址类型，static和none为静态地址，dhcp为动态获取ip地址<br>HWADDR是MAC地址<br>MTU是最大传输单位<br>NM_CONTROLLED是否启用NetworkManager图形界面配置工具<br>ONBOOT设置网卡是否在Linux系统启动时激活，这一项一般都要设为yes<br>IPADDR是本机ip地址<br>NETMASK是子网掩码<br>GATEWAY是设置网关的<br>DNS1是首选DNS服务器<br>DNS2时辅助DNS服务器<br>还有一些几个参数一般情况下不用配置：<br>BROADCAST是广播地址<br>NETWORK是子网地址<br>在以上参数中IPADDR要跟主机IP在同一个网段，GATEWAY默认网关要跟主机一致。</p><hr><blockquote><ul><li><strong>修改完参数，重启网络服务</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# service network restart</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>验证宿主机互通</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ping 主机地址</span><br><span class="line"></span><br><span class="line">C:\Users\MelodyFair&gt; ping 虚拟机地址</span><br><span class="line">`</span><br></pre></td></tr></table></figure><hr><p>恭喜你，已经完成了哦。</p><p>如果还不能互通，一般的情况是防火墙要关闭。宿主机和虚拟机关闭防火墙具体请参看我的另外一篇文章。防火墙的开启与关闭</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虚拟机只有能与宿主机互相连接ftp，能在宿主机向虚拟机传输文件才能更方便的处理问题，比如安装oracle，weblogic等等。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟机" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>SELinux介绍</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/SELinux%E4%BB%8B%E7%BB%8D/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/SELinux介绍/</id>
    <published>2017-12-26T16:00:00.000Z</published>
    <updated>2017-12-28T12:45:05.059Z</updated>
    
    <content type="html"><![CDATA[<p>几乎可以肯定每个人都听说过 SELinux (更准确的说，尝试关闭过)，甚至某些过往的经验让您对 SELinux 产生了偏见。<br>不过随着日益增长的 0-day 安全漏洞，或许现在是时候去了解下这个在 Linux 内核中已经有8年历史的强制性访问控制系统(MAC)了。<br><a id="more"></a></p><blockquote><ul><li><strong>SELinux 与强制访问控制系统</strong> </li></ul></blockquote><hr><p>SELinux 全称 Security Enhanced Linux (安全强化 Linux)，是 MAC (Mandatory Access Control，<br>强制访问控制系统)的一个实现，目的在于明确的指明某个进程可以访问哪些资源(文件、网络端口等)。<br>强制访问控制系统的用途在于增强系统抵御 0-Day 攻击(利用尚未公开的漏洞实现的攻击行为)的能力。所以它不是网络防火墙或 ACL 的替代品，在用途上也不重复。</p><p>举例来说，系统上的 Apache 被发现存在一个漏洞，使得某远程用户可以访问系统上的敏感文件(比如 /etc/passwd 来获得系统已存在用户)，<br>而修复该安全漏洞的 Apache 更新补丁尚未释出。此时 SELinux 可以起到弥补该漏洞的缓和方案。因为 /etc/passwd 不具有 Apache 的访问标签，<br>所以 Apache 对于 /etc/passwd 的访问会被 SELinux 阻止。</p><hr><blockquote><ul><li><strong>SELinux 与强制访问控制系统</strong> </li></ul></blockquote><hr><p>●控制策略是可查询而非程序不可见的。</p><p>●可以热更改策略而无需重启或者停止服务。</p><p>●可以从进程初始化、继承和程序执行三个方面通过策略进行控制。</p><p>●控制范围覆盖文件系统、目录、文件、文件启动描述符、端口、消息接口和网络接口。</p><hr><blockquote><ul><li><strong>SELinux 配置</strong> </li></ul></blockquote><hr><p>1、获取SELinux状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getenforce</span><br></pre></td></tr></table></figure></p><p>可能返回结果有三种：Enforcing、Permissive 和 Disabled。Disabled 代表 SELinux 被禁用，Permissive 代表仅记录安全警告但不阻止可疑行为，<br>Enforcing 代表记录警告且阻止可疑行为。目前常见发行版中，RHEL 和 Fedora 默认设置为 Enforcing，其余的如 openSUSE 等为 Permissive。<br>2、改变 SELinux 运行状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce [ Enforcing | Permissive | 1 | 0 ]</span><br></pre></td></tr></table></figure></p><p>该命令可以立刻改变 SELinux 运行状态，在 Enforcing 和 Permissive 之间切换，结果保持至关机。一个典型的用途是看看到底是不是 SELinux 导致某个服务或者程序无法运行。<br>若是在 setenforce 0 之后服务或者程序依然无法运行，那么就可以肯定不是 SELinux 导致的。<br>若是想要永久变更系统 SELinux 运行环境，可以通过更改配置文件 /etc/sysconfig/selinux 实现。<br>注意当从 Disabled 切换到 Permissive 或者 Enforcing 模式后需要重启计算机并为整个文件系统重新创建安全标签(touch /.autorelabel &amp;&amp; reboot)。<br>3、SELinux 运行策略<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置文件 /etc/sysconfig/selinux 还包含了 SELinux 运行策略的信息，通过改变变量 SELINUXTYPE 的值实现，该值有两种可能：</span><br><span class="line">targeted 代表仅针对预制的几种网络服务和访问请求使用 SELinux 保护，strict 代表所有网络服务和访问请求都要经过 SELinux。</span><br><span class="line">RHEL 和 Fedora 默认设置为 targeted，包含了对几乎所有常见网络服务的 SELinux 策略配置，已经默认安装并且可以无需修改直接使用。</span><br><span class="line">若是想自己编辑 SELinux 策略，也提供了命令行下的策略编辑器 seedit 以及 Eclipse 下的编辑插件 eclipse-slide 。</span><br></pre></td></tr></table></figure></p><hr><blockquote><ul><li><strong>SELinux 关闭</strong> </li></ul></blockquote><hr><p>1、临时关闭（不用重启机器）：<br>setenforce 0                  ##设置SELinux 成为permissive模式</p><pre><code>##setenforce 1 设置SELinux 成为enforcing模式</code></pre><p>2、修改配置文件需要重启机器：<br>修改/etc/selinux/config 文件<br>将SELINUX=enforcing改为SELINUX=disabled<br>重启机器即可</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;几乎可以肯定每个人都听说过 SELinux (更准确的说，尝试关闭过)，甚至某些过往的经验让您对 SELinux 产生了偏见。&lt;br&gt;不过随着日益增长的 0-day 安全漏洞，或许现在是时候去了解下这个在 Linux 内核中已经有8年历史的强制性访问控制系统(MAC)了。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/Linux/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>项目部署（四）Centos虚拟机防火墙的打开关闭</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E5%9B%9B%EF%BC%89Centos%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/项目部署（四）Centos虚拟机防火墙的打开关闭/</id>
    <published>2017-12-26T16:00:00.000Z</published>
    <updated>2017-12-27T06:38:07.491Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS 7.0默认使用的是firewall作为防火墙。只有关闭了防火墙，才能进行宿主机和虚拟机的互相访问。同理，宿主机也要关闭防火墙。下面我们介绍一下虚拟机防火墙的各种操作。<br><a id="more"></a></p><blockquote><ul><li><strong>查看防火墙状态</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd    --state</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>关闭防火墙</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  stop   firewalld.service</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>开启防火墙</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  start   firewalld.service</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>禁止开机启动启动防火墙</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl   disable   firewalld.service</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>下面是一些常用的语法的总结</strong></li></ul></blockquote><hr><p>firewall-cmd –state </p><p>##查看防火墙状态，是否是running<br>firewall-cmd –reload </p><p>##重新载入配置，比如添加规则之后，需要执行此命令<br>firewall-cmd –get-zones</p><p>##列出支持的zone<br>firewall-cmd –get-services </p><p>##列出支持的服务，在列表中的服务是放行的<br>firewall-cmd –query-service ftp</p><p>##查看ftp服务是否支持，返回yes或者no<br>firewall-cmd –add-service=ftp </p><p>##临时开放ftp服务<br>firewall-cmd –add-service=ftp –permanent</p><p> ##永久开放ftp服务<br>firewall-cmd –remove-service=ftp –permanent </p><p>##永久移除ftp服务<br>firewall-cmd –add-port=80/tcp –permanent </p><p>##永久添加80端口<br>iptables -L -n </p><p>##查看规则，这个命令是和iptables的相同的<br>man firewall-cmd </p><p>##查看帮助</p><hr><p>恭喜你，已经学会了哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS 7.0默认使用的是firewall作为防火墙。只有关闭了防火墙，才能进行宿主机和虚拟机的互相访问。同理，宿主机也要关闭防火墙。下面我们介绍一下虚拟机防火墙的各种操作。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟机" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>项目部署（五）Centos虚拟机安装weblogic</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%94%EF%BC%89Centos%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Weblogic/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/项目部署（五）Centos虚拟机安装Weblogic/</id>
    <published>2017-12-26T16:00:00.000Z</published>
    <updated>2017-12-28T04:03:15.007Z</updated>
    
    <content type="html"><![CDATA[<p>我们可以在CentOS 7.0中安装weblogic和数据库oracle等，用来本地部署项目，实验双机，热备，集群等等。下面我们介绍一下weblogic的安装。<br><a id="more"></a></p><blockquote><ul><li><strong>安装JDK</strong> </li></ul></blockquote><hr><p>具体请参照我的前一篇博客，此处不再赘述。</p><p><a href="https://hzxblogs.github.io/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%8C%EF%BC%89JDK1.8%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">https://hzxblogs.github.io/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%8C%EF%BC%89JDK1.8%E5%AE%89%E8%A3%85/</a></p><hr><blockquote><ul><li><strong>环境准备</strong> </li></ul></blockquote><hr><p>下载WebLogic安装包，我下载的是11g，也就是10.3.6版本，官网上安装包名称为wls1036_generic.jar,Oracle官网下载连接。将其拷贝到机器上来。<br>安装weblogic的链接 链接：<a href="https://pan.baidu.com/s/1bEffFg" target="_blank" rel="noopener">https://pan.baidu.com/s/1bEffFg</a> 密码：zg95</p><hr><blockquote><ul><li><strong>创建weblogic组和用户</strong> </li></ul></blockquote><hr><p>创建用户组一是方便管理，减少误操作对系统产生的影响。二是为了安全起见，即使别人攻入了你的系统获得了Weblogic的控制权，对于操作系统来说也只是一个普通的受限用户。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost~]groupadd weblogic</span><br><span class="line">[root@localhost~]useradd -g weblogic weblogic</span><br><span class="line">[root@localhost~]passwd weblogic123</span><br></pre></td></tr></table></figure><p>用root用户创建weblogic组和用户后，切换用户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - weblogic</span><br></pre></td></tr></table></figure></p><p>在home目录下创建文件夹：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]cd /home</span><br><span class="line">[weblogic@localhost~]mkdir weblogic</span><br></pre></td></tr></table></figure></p><p>将weblogic安装包wls1211_generic.jar上传至weblogic主目录下即/home/weblogic。否则用root用户上传文件后，weblogic对其没有权限操作。<br>如果误传文件，不要急，切换到root用户对weblogic赋权即可。可以使用chown命令来改变文件所有者及用户组，chgrp命令来改变文件所在用户组<br>chown [-R] 账号名称:用户组名称 文件或目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost~]chown [-R] weblogic:weblogic /home/weblogic</span><br><span class="line">[root@localhost~]chmod 777 wls1211_generic.jar</span><br></pre></td></tr></table></figure></p><hr><blockquote><ul><li><strong>安装weblogic</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]java -jar wls1211_generic.jar -mode=console</span><br></pre></td></tr></table></figure><hr><p>Welcome:</p><hr><p>This installer will guide you through theinstallation of WebLogic 12.1.1.0.<br>Type “Next” or enter to proceedto the next prompt.  If you want tochange data entered previously, type “Previous”.  You may quit the installer at any time bytyping “Exit”.<br>Enter [Exit][Next]&gt;        Next</p><hr><p>Choose Middleware Home Directory:</p><hr><p>   “Middleware Home” = [Enter new value or use default<br>“/home/weblogic/Oracle/Middleware”]<br>Enter new Middleware Home OR[Exit][Previous][Next]&gt;        Next</p><p>Choose Middleware Home Directory:   </p><hr><p>   “Middleware Home” = [/home/weblogic/Oracle/Middleware]<br>Use above value or select another option:<br>    1- Enter new Middleware Home<br>    2- Change to default [/home/weblogic/Oracle/Middleware]<br>Enter option number to select OR[Exit][Previous][Next]&gt;       Next</p><h2 id="Register-for-Security-Updates"><a href="#Register-for-Security-Updates" class="headerlink" title="Register for Security Updates:"></a>Register for Security Updates:</h2><p>Provide your email address for securityupdates and  to initiate configurationmanager.<br>  1|Email:[]<br>  2|Support Password:[]<br>  3|Receive Security Update:[Yes]<br>Enter index number to select OR[Exit][Previous][Next]&gt;        3</p><hr><p>Register for Security Updates:</p><hr><p>Provide your email address for securityupdates and  to initiate configurationmanager.<br>   “Receive Security Update:” = [Enter new value or use default”Yes”]<br>Enter [Yes][No]?         No</p><p>Register for Security Updates:</p><hr><p>Provide your email address for securityupdates and  to initiate configurationmanager.<br>   “Receive Security Update:” = [Enter new value or use default”Yes”]<br>   <strong> Do you wish to bypass initiation of the configuration manager and   </strong>  remain uninformed of criticalsecurity issues in your configuration?<br>Enter [Yes][No]?       ### yes</p><p>Register for Security Updates:</p><hr><p>Provide your email address for securityupdates and  to initiate configurationmanager.<br>  1|Email:[]<br>  2|Support Password:[]<br>  3|Receive Security Update:[No]<br>Enter index number to select OR [Exit][Previous][Next]&gt;       ### Next</p><p>Choose Install Type:</p><hr><p>Select the type of installation you wish toperform.<br> -&gt;1|Typical<br>   |  Install the followingproduct(s) and component(s):<br>    |- WebLogic Server<br>    |- Oracle Coherence</p><p>  2|Custom<br>   |  Choose software products andcomponents to install and perform optional<br>   |configuration.<br>Enter index number to select OR[Exit][Previous][Next]&gt;       ### 1</p><p>Choose Product Installation Directories:</p><hr><p>Middleware Home Directory: [/home/weblogic/Oracle/Middleware]<br>Product Installation Directories:<br>  1|WebLogic Server: [/home/weblogic/Oracle/Middleware/wlserver_12.1]<br>  2|Oracle Coherence: [/home/weblogic/Oracle/Middleware/coherence_3.7]<br>Enter index number to select OR[Exit][Previous][Next]&gt;       ### Next</p><p>The following Products and JDKs will beinstalled:</p><hr><p>   WebLogic Platform 12.1.1.0<br>   |<strong>_</strong>WebLogic Server<br>   |    |<strong>_</strong>Core Application Server<br>   |    |<strong>_</strong>Administration Console<br>   |    |<strong>_</strong>Configuration Wizardand Upgrade Framework<br>   |    |<strong>_</strong>Web 2.0 HTTP Pub-SubServer<br>   |    |<strong>_</strong>WebLogic SCA<br>   |    |<strong>_</strong>WebLogic JDBC Drivers<br>   |    |<strong>_</strong>Third Party JDBCDrivers<br>   |    |<strong>_</strong>WebLogic Server Clients<br>   |    |<strong>_</strong>Xquery Support<br>   |    |<strong>_</strong>Evaluation Database<br>   |<strong>_</strong>Oracle Coherence<br>   |    |<strong>_</strong>Coherence Product Files<br>   |<strong>_</strong>JDKs<br>        |<strong>_</strong>SUN SDK 1.6.0_29<br>        |<strong>_</strong>Oracle JRockit 1.6.0_29 SDK<br>   *Estimated size of installation: 1,178.0 MB<br>Enter [Exit][Previous][Next]&gt;        ### Next</p><p>Installing files..<br>0%         25%          50%          75%          100%<br>[————|————|————|————]<br>[<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>*</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>]<br>Installing JDK….<br>Performing String Substitutions…<br>Configuring OCM…<br>Installing Patches…<br>Creating Domains…<br>Installation Complete<br>Press [Enter] to continue or type[Exit]&gt;       ### ↙</p><p>到目前为止weblogic就安装完成了。</p><hr><blockquote><ul><li><strong>配置domain</strong></li></ul></blockquote><p>安装完成后按下Enter应该会默认启动Domain配置界面，如果不是，请到安装路径下执行配置启动脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]cd /home/weblogic/Oracle/Middleware/wlserver_10.3/common/bin</span><br><span class="line">[weblogic@localhost~]./config.sh</span><br></pre></td></tr></table></figure></p><hr><p>1、欢迎界面，选择是新建domain还是扩展，因为第一次使用，输入1，即新建；<br>2、选择domain源，也是使用默认配置，即键入1回车；<br>3、应用程序模板选择，这里使用默认，即输入Next回车；<br>4、编辑domain信息，域名base_domain，默认，输入Next回车；<br>5、为domain选择目标或目录，默认，输入Next回车；<br>6、配置管理员用户名和口令，这里按需要输入选项，并根据提示操作，比较简单，配置好输入Next回车；<br>7、domain模式选择，我选择的生产模式，输入2回车；<br>8、选择JDK，使用我们之前安装的，输入2回车；<br>9、选择可选配置，我们暂不配置，输入Next回车；<br>10、开始执行创建，之后显示创建成功。</p><hr><blockquote><ul><li><strong>执行启动脚本</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]cd /home/weblogic/Oracle/Middleware/user_projects/domains/base_domain</span><br><span class="line">[weblogic@localhost~]./startWebLogic.shh</span><br></pre></td></tr></table></figure></li></ul></blockquote><p>提示输入用户名密码，就是我们创建domain时配置的，输入信息后回车，稍等片刻，运行 ifconfig 查看虚拟机IP，在宿主机中访问<br><a href="http://ip地址:7001/console" target="_blank" rel="noopener">http://ip地址:7001/console</a><br>如果能出现WebLogic登录页，则说明服务启动成功。</p><blockquote><ul><li><strong>配置weblogic启动参数</strong></li></ul></blockquote><hr><p>每次启动WebLogic时都要输入用户名和密码，假设我的WebLogic是自动随着我的服务器的启动而启动，那么如果此时因为是无人值守，谁来输这个用户名和密码啊？提供个方法记住密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]cd /home/weblogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer</span><br><span class="line">[weblogic@localhost~]mkdir security</span><br><span class="line">[weblogic@localhost~]vi boot.properties</span><br></pre></td></tr></table></figure></p><p>在文件中输入：<br>username=xxx<br>password=xxx</p><p>保存就可以了，重启weblogic以后不会再提示输入用户名和密码。</p><blockquote><ul><li><strong>封装weblogic启动脚本</strong></li></ul></blockquote><p>在启动weblogic中，有三个问题，<br>1、启动目录下只有启动脚本，没有停止脚本。<br>2、每次启动都要cd到启动目录下。<br>3、ctrl++c 退出启动脚本后，weblogic服务也停止了。<br>针对这三个问题，我们一起来看下我是怎么封装的。</p><p>首先无论是startWeblogic还是stopWeblogic 都是引用这个目录下的startWeblogic.sh文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]cd /home/weblogic/Oracle/Middleware/user_projects/domains/base_domain/bin</span><br></pre></td></tr></table></figure><p>现在我们可以这么封装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[weblogic@localhost~]cd /home/weblogic/</span><br><span class="line">[weblogic@localhost~]mkdir sh</span><br><span class="line">[weblogic@localhost~]cd sh</span><br><span class="line">[weblogic@localhost~]vi startWeblogic.sh</span><br></pre></td></tr></table></figure><p>编辑的startWeblogic.sh内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line"># WARNING: This file is created by the Configuration Wizard.</span><br><span class="line"># Any changes to this script may be lost when adding extensions to this configuration</span><br><span class="line"></span><br><span class="line">cd /home/weblogic/Oracle/Middleware/user_projects/domains/base_domain/bin</span><br><span class="line">nohup ./startWebLogic.sh &gt;out.log 2&gt;&amp;1 &amp;</span><br><span class="line">tail -f out.log</span><br></pre></td></tr></table></figure></p><p>同理, 编辑的startWeblogic.sh内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line"># WARNING: This file is created by the Configuration Wizard.</span><br><span class="line"># Any changes to this script may be lost when adding extensions to this configuration</span><br><span class="line"></span><br><span class="line">cd /home/weblogic/Oracle/Middleware/user_projects/domains/base_domain/bin</span><br><span class="line">nohup ./stopWebLogic.sh &gt;outstop.log 2&gt;&amp;1 &amp;</span><br><span class="line">tail -f outstop.log</span><br></pre></td></tr></table></figure></p><hr><p>恭喜你，已经完成了哦，以后就可以直接用 ./home/weblogic/sh/startWebLogic.sh 来启动weblogic了。并且解决了上面我们提出的三个问题。<br>有兴趣的同学可以跟我一起看看关于命令为什么要这么封装的介绍。</p><blockquote><ul><li><strong>nohup脚本介绍</strong></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./startWebLogic.sh &gt;out.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>其中 0、1、2分别代表如下含义：<br> 0 – stdin (standard input)<br> 1 – stdout (standard output)<br> 2 – stderr (standard error)<br>nohup ./startWebLogic.sh &gt;out.log 2&gt;&amp;1 &amp;<br>nohup+最后面的&amp; 是让命令在后台执行。</p><blockquote><p>out.log 是将信息输出到out.log日志中。<br>2&gt;&amp;1 是将标准错误信息转变成标准输出，这样就可以将错误信息输出到out.log 日志里面来。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们可以在CentOS 7.0中安装weblogic和数据库oracle等，用来本地部署项目，实验双机，热备，集群等等。下面我们介绍一下weblogic的安装。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟机" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>项目部署（六）Centos虚拟机安装oracle</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E5%85%AD%EF%BC%89%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Oracle/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/27/项目部署（六）虚拟机安装Oracle/</id>
    <published>2017-12-26T16:00:00.000Z</published>
    <updated>2017-12-28T12:44:52.929Z</updated>
    
    <content type="html"><![CDATA[<p>Oracle 在Linux和window上的安装不太一样，oracle 默认不支持CentOS系统安装，所以安装的时候，需要修改部分属性，先参考同行博客和自己安装实践，做个总结。<br><a id="more"></a></p><blockquote><ul><li><strong>安装JDK</strong> </li></ul></blockquote><hr><p><a href="https://hzxblogs.github.io/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%8C%EF%BC%89JDK1.8%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">https://hzxblogs.github.io/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%8C%EF%BC%89JDK1.8%E5%AE%89%E8%A3%85/</a></p><hr><blockquote><ul><li><strong>下载Oracle安装包</strong> </li></ul></blockquote><hr><p>linux.x64_11gR2_database_1of2.zip 和 linux.x64_11gR2_database_2of2.zip ，可以下载到本地，通过ftp服务上传到Linux系统。</p><hr><p>用Root账号登录，运行下面指令。</p><blockquote><ul><li><strong>创建运行oracle数据库的系统用户和用户组</strong> </li></ul></blockquote><hr><p>创建所需要用户和用户组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">groupadd oinstall　　　　　　　　　　　　　#创建用户组oinstall</span><br><span class="line">groupadd dba　　      　　　　　　　　　　 #创建用户组dba</span><br><span class="line">useradd -g oinstall -g dba -m oracle　　   #创建oracle用户，并加入到oinstall和dba用户组</span><br><span class="line">groups oracle  　　　　　　　　　　　　　　#查询用户组是否授权成功</span><br><span class="line">passwd oracle　　     　　　　　　　　　　 #设置用户oracle的登陆密码，不设置密码，在CentOS的图形登陆界面没法登陆</span><br><span class="line">id oracle                   　　　　　　   #查看新建的oracle用户</span><br></pre></td></tr></table></figure></p><hr><blockquote><ul><li><strong>创建oracle数据库安装目录（运行下面指令，创建账号和分配权限）</strong> </li></ul></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/oracle　　#oracle数据库安装目录</span><br><span class="line">mkdir -p /data/oraInventory　　#oracle数据库配置文件目录</span><br><span class="line">mkdir -p /data/database　　#oracle数据库软件包解压目录</span><br><span class="line">cd /data</span><br><span class="line">ls　　#创建完毕检查一下</span><br><span class="line">chown -R oracle:oinstall /data/oracle　　#设置目录所有者为oinstall用户组的oracle用户</span><br><span class="line">chown -R oracle:oinstall /data/oraInventory</span><br><span class="line">chown -R oracle:oinstall /data/database</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>修改OS系统标识</strong> </li></ul></blockquote><hr><p>oracle默认不支持CentOS系统安装， 修改文件 /etc/RedHat-release 内容为RedHat-7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/redhat-release#修改成红色部分文字</span><br><span class="line">redhat-7</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>安装oracle数据库所需要的软件包</strong> </li></ul></blockquote><hr><p>以下是按照需要依赖的安装包，通过 yum install {包名} 来验证是否安装，例如yum install binutils<br>binutils-2.23.52.0.1-12.el7.x86_64<br>compat-libcap1-1.10-3.el7.x86_64<br>gcc-4.8.2-3.el7.x86_64<br>gcc-c++-4.8.2-3.el7.x86_64<br>glibc-2.17-36.el7.i686<br>glibc-2.17-36.el7.x86_64<br>glibc-devel-2.17-36.el7.i686<br>glibc-devel-2.17-36.el7.x86_64<br>ksh<br>libaio-0.3.109-9.el7.i686<br>libaio-0.3.109-9.el7.x86_64<br>libaio-devel-0.3.109-9.el7.i686<br>libaio-devel-0.3.109-9.el7.x86_64<br>libgcc-4.8.2-3.el7.i686<br>libgcc-4.8.2-3.el7.x86_64<br>libstdc++-4.8.2-3.el7.i686<br>libstdc++-4.8.2-3.el7.x86_64<br>libstdc++-devel-4.8.2-3.el7.i686<br>libstdc++-devel-4.8.2-3.el7.x86_64<br>libXi-1.7.2-1.el7.i686<br>libXi-1.7.2-1.el7.x86_64<br>libXtst-1.2.2-1.el7.i686<br>libXtst-1.2.2-1.el7.x86_64<br>make-3.82-19.el7.x86_64<br>sysstat-10.1.5-1.el7.x86_64<br>使用下面指令，检查依赖软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install binutils-2.* compat-libstdc++-33* elfutils-libelf-0.* elfutils-libelf-devel-* gcc-4.* gcc-c++-4.* glibc-2.* glibc-common-2.* glibc-devel-2.* glibc-headers-2.* ksh-2* libaio-0.* libaio-devel-0.* libgcc-4.* libstdc++-4.* libstdc++-devel-4.* make-3.* sysstat-7.* unixODBC-2.* unixODBC-devel-2.* pdksh*</span><br></pre></td></tr></table></figure></p><hr><blockquote><ul><li><strong>关闭防火墙和selinux</strong> </li></ul></blockquote><hr><p>查看我的博客<br>关闭防火墙：<br><a href="https://hzxblogs.github.io/2017/12/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E5%9B%9B%EF%BC%89Centos%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD/" target="_blank" rel="noopener">https://hzxblogs.github.io/2017/12/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E5%9B%9B%EF%BC%89Centos%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD/</a><br>关闭SElinux：</p><hr><blockquote><ul><li><strong>修改内核参数</strong> </li></ul></blockquote><hr><p>vi /etc/sysctl.conf #红色部分是要添加sysctl.conf内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.icmp_echo_ignore_broadcasts = 1</span><br><span class="line">net.ipv4.conf.all.rp_filter = 1</span><br><span class="line">fs.file-max = 6815744 #设置最大打开文件数</span><br><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">kernel.shmall = 2097152 #共享内存的总量，8G内存设置：2097152*4k/1024/1024</span><br><span class="line">kernel.shmmax = 2147483648 #最大共享内存的段大小</span><br><span class="line">kernel.shmmni = 4096 #整个系统共享内存端的最大数</span><br><span class="line">kernel.sem = 250 32000 100 128</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500 #可使用的IPv4端口范围</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">net.core.rmem_max= 4194304</span><br><span class="line">net.core.wmem_default= 262144</span><br><span class="line">net.core.wmem_max= 1048576</span><br></pre></td></tr></table></figure><hr><blockquote><ul><li><strong>对oracle用户设置限制，提高软件运行性能</strong></li></ul></blockquote><hr><p>vi /etc/security/limits.conf  #红色部分要添加到Limits.conf内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">oracle soft nproc 2047</span><br><span class="line">oracle hard nproc 16384</span><br><span class="line">oracle soft nofile 1024</span><br><span class="line">oracle hard nofile 65536</span><br></pre></td></tr></table></figure></p><hr><blockquote><ul><li><strong>配置用户的环境变量</strong></li></ul></blockquote><hr><p>vi /home/oracle/.bash_profile  #红色部分是要追加bash_profile内容部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export ORACLE_BASE=/data/oracle #oracle数据库安装目录</span><br><span class="line">export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1 #oracle数据库路径</span><br><span class="line">export ORACLE_SID=orcl #oracle启动数据库实例名</span><br><span class="line">export ORACLE_TERM=xterm #xterm窗口模式安装</span><br><span class="line">export PATH=$ORACLE_HOME/bin:/usr/sbin:$PATH #添加系统环境变量</span><br><span class="line">export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib #添加系统环境变量</span><br><span class="line">export LANG=C #防止安装过程出现乱码</span><br><span class="line">export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK  #设置Oracle客户端字符集，必须与Oracle安装时设置的字符集保持一致</span><br></pre></td></tr></table></figure></p><p>配置完成，:wq!保存退出，运行source /home/oracle/.bash_profile时上述配置生效</p><hr><blockquote><ul><li><strong>获取安装包文件后解压安装包</strong></li></ul></blockquote><hr><p>获取安装包文件的方式，可通过ftp服务器，也可通过wget下载到指定目录，解压方式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unzip linux.x64_11gR2_database_1of2.zip -d /data/database/  #解压文件1</span><br><span class="line">unzip linux.x64_11gR2_database_2of2.zip -d /data/database/  #解压文件2</span><br><span class="line">chown -R oracle:oinstall /data/database/database/　　　　　　 #分配安装文件授权Oracle</span><br></pre></td></tr></table></figure></p><hr><blockquote><ul><li><strong>Oracle安装</strong></li></ul></blockquote><hr><p>1、oracle用户登录系统，使用命令行跳转到data/database/database目录下，输入./runInstaller 调出安装页面；</p><h2 id="2、调出安装页面，点击下一步进行安装，我选择仅数据库服务安装。"><a href="#2、调出安装页面，点击下一步进行安装，我选择仅数据库服务安装。" class="headerlink" title="2、调出安装页面，点击下一步进行安装，我选择仅数据库服务安装。"></a>2、调出安装页面，点击下一步进行安装，我选择仅数据库服务安装。</h2><p>像window安装Oracle安装一样，此处不再重复介绍。<br>对于没有安装centos可视化的朋友，可能会报错，</p><p>　　安装完成之后，通过netca打开监听配置页面，通过执行dbca命令，启动oracle实例安装界面,一个Oracle服务可以对应多个实例，一个Oracle数据库对应多个表空间和用户名，每个用户名又可管理表空间。<br>　　安装完成实例之后，使用sqlPlus命令链接数据库的时候，提 示 could not open parameter file “/data /Oracle/product/11.2/db_1/dbs/initorcl.ora”，这个时候需要将刚刚安装的Oracle实例配置文件 （$ORACLE_BASE/admin /数据库名称/pfile目录下的init.ora.012009233838形式的文件）拷贝到/data/Oracle/product/11.2 /db_1/dbs目录下<br>[oracle@localhost pfile]$ pwd<br>/data/oracle/admin/MLUCDB/pfile<br>[oracle@localhost pfile]$ cp init.ora.962016224738 /data/Oracle/product/11.2/db_1/dbs/initorcl.ora</p><p>#使用sqlplus命令登录Oracle，重启服务器<br>sqlplus  /nolog<br>conn / as sysdba;</p><p>#再输入startup，回车.这步是启动oracle服务。<br>startup<br> 　  重启服务器之后，打开Oracle，提示 ORA-01034: ORACLE not available ORA-27101<br>　　原因在于未启动服务，操作的方式是：<br>　　1、启动oracle监听：cmd命令行窗口下，输入lsnrctl start，回车即启动监听；<br>　　2、采用sqlplus /nolog 登录Oracle服务，连接服务conn /as sysdba，然后startup启动服务<br>扩展RedHat下Oracle的安装<br>　　1、RedHat系统版本尽量使用Desk版本，便于Oracle的界面安装，Oracle安装文件传输到RedHat服务器，可以通过SecureCrt远程客户端完成数据的传输。<br>　　2、记得配置用户换机下的安装编码，否则oracle安装会出现乱码：<br>vi /home/oracle/.bash_profile  #追加配置文件<br>export LANG=C #防止安装过程出现乱码<br>export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK  #设置Oracle客户端字符集，必须与Oracle安装时设置的字符集保持一致。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Oracle 在Linux和window上的安装不太一样，oracle 默认不支持CentOS系统安装，所以安装的时候，需要修改部分属性，先参考同行博客和自己安装实践，做个总结。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟机" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>项目部署（二）安装JDK</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%BA%8C%EF%BC%89JDK1.8%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/项目部署（二）JDK1.8安装/</id>
    <published>2017-12-26T12:52:03.840Z</published>
    <updated>2017-12-26T12:55:16.942Z</updated>
    
    <content type="html"><![CDATA[<p>一直想搞项目部署，weblogic集群负载等，苦于没有Linux环境，近来没什么事，想着电脑配置比较高，就在本机做虚拟机算了。<br><a id="more"></a></p><blockquote><ul><li><strong>环境说明</strong> </li></ul></blockquote><hr><p>在CentOS 7中安装与配置JDK8<br>安装JDK         链接：<a href="https://pan.baidu.com/s/1kUBeVMR" target="_blank" rel="noopener">https://pan.baidu.com/s/1kUBeVMR</a> 密码：zwwp<br>安装说明<br>系统环境：centos7<br>安装方式：rpm安装<br>软件：jdk-8u25-linux-x64.rpm<br>下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><hr><blockquote><ul><li><strong>检验系统原版本</strong> </li></ul></blockquote><hr><p>[root@zck ~]# java -version</p><p>java version “1.7.0_”<br>OpenJDK Runtime Environment (IcedTea6 1.11.1) (rhel-1.45.1.11.1.el6-x86_64)<br>OpenJDK 64-Bit Server VM (build 20.0-b12, mixed mode)</p><hr><blockquote><ul><li><strong>进一步查看JDK信息</strong> </li></ul></blockquote><hr><p>[root@localhost ~]#  rpm -qa | grep java</p><p>javapackages-tools-3.4.1-6.el7_0.noarch<br>tzdata-java-2014i-1.el7.noarch<br>java-1.7.0-openjdk-headless-1.7.0.71-2.5.3.1.el7_0.x86_64<br>java-1.7.0-openjdk-1.7.0.71-2.5.3.1.el7_0.x86_64<br>python-javapackages-3.4.1-6.el7_0.noarch</p><hr><blockquote><ul><li><strong>卸载OpenJDK，执行以下操作</strong> </li></ul></blockquote><hr><p>[root@localhost ~]# rpm -e –nodeps tzdata-java-2014i-1.el7.noarch<br>[root@localhost ~]# rpm -e –nodeps java-1.7.0-openjdk-headless-1.7.0.71-2.5.3.1.el7_0.x86_64<br>[root@localhost ~]# rpm -e –nodeps java-1.7.0-openjdk-1.7.0.71-2.5.3.1.el7_0.x86_64</p><hr><blockquote><ul><li><strong>安装JDK</strong> </li></ul></blockquote><hr><p>上传新的jdk-8u25-linux-x64.rpm软件到/usr/local/执行以下操作：<br>[root@zck local]# rpm -ivh jdk-8u25-linux-x64.rpm</p><hr><p>JDK默认安装在/usr/java中。</p><blockquote><ul><li><strong>验证安装</strong> </li></ul></blockquote><hr><p>执行以下操作，查看信息是否正常：<br>[root@localhost ~]# java<br>[root@localhost ~]# javac<br>[root@localhost ~]# java -version</p><p>java version “1.8.0_25”<br>Java(TM) SE Runtime Environment (build 1.8.0_25-b17)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)</p><hr><blockquote><ul><li><strong>配置环境变量</strong> </li></ul></blockquote><hr><p>我的机器安装完jdk-7-linux-x64.rpm后不用配置环境变量也可以正常执行javac、java –version操作，因此我没有进行JDK环境变量的配置。但是为了以后的不适之需，这里还是记录一下怎么进行配置，操作如下：<br>修改系统环境变量文件<br>vi + /etc/profile</p><p>向文件里面追加以下内容：</p><p>JAVA_HOME=/usr/java/jdk1.8.0_25<br>JRE_HOME=/usr/java/jdk1.8.0_25/jre<br>PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin<br>CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib<br>export JAVA_HOME JRE_HOME PATH CLASSPATH</p><hr><blockquote><ul><li><strong>使修改生效</strong> </li></ul></blockquote><hr><p>[root@localhost ~]# source /etc/profile   //使修改立即生效<br>[root@localhost ~]#        echo $PATH   //查看PATH值</p><hr><blockquote><ul><li><strong>查看系统环境状态</strong></li></ul></blockquote><hr><p>[root@localhost ~]# echo $PATH<br>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/usr/java/jdk1.8.0_25/bin:/usr/java/jdk1.8.0_25/jre/bin</p><hr><p>恭喜你，已经完成了哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直想搞项目部署，weblogic集群负载等，苦于没有Linux环境，近来没什么事，想着电脑配置比较高，就在本机做虚拟机算了。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟机" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建教程</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/Hexo+Github搭建自己的博客/</id>
    <published>2017-12-26T09:28:55.243Z</published>
    <updated>2017-12-26T12:38:20.126Z</updated>
    
    <content type="html"><![CDATA[<p>2017年4月份进行了博客的部署，因为今天想着好久没有发布文章了，进行部署后，发现博客样式变了，索性就重新部署了一下<br><a id="more"></a></p><blockquote><ul><li><strong>安装Git</strong> </li></ul></blockquote><hr><p> 1、下载地址   <a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a>  （版本不限）<br> 2、安装选择<br>    一路下一步，直到选择页面如图所示![Git安装选择][1]<br> 3、测试是否安装完毕<br>    在电脑桌面右键包含git bash here。</p><hr><blockquote><ul><li><strong>安装node.js</strong></li></ul></blockquote><hr><p>1、下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>2、安装一路下一波即可，路径没有要求（目录尽量中文）</p><hr><blockquote><ul><li><strong>安装hexo并初始化</strong></li></ul></blockquote><hr><p>1、利用 npm 命令即可安装。在任意位置点击鼠标右键，选择Git Bash<br>2、输入命令：npm install -g hexo<br>3、在E盘创建hexo文件夹（e:/hexo） 路径-目录名自己随意。<br>4、在hexo文件夹下，右键运行Git Bash，输入命令：hexo init<br>5、初始化完成，可以选择配置_config.yml文件。具体配置可查百度。<br>6、在hexo文件夹下，右键运行Git Bash，执行 hexo g和hexo s，使用控制台给出的地址访问自己的博客。</p><hr><blockquote><ul><li><strong>github的部署</strong></li></ul></blockquote><hr><p>1.申请github的账号 <a href="https://github.com/">https://github.com/</a><br>2.建立仓库，注意仓库名要与你的GitHub一致，如我的GitHub名是Melody-Fair，那么我的仓库名就是Melody-Fair.github.io。<br>3.在仓库的settings里设置github Pages。</p><p>配置完成。</p><hr><blockquote><ul><li><strong>部署hexo</strong></li></ul></blockquote><hr><p>1.在hexo的文件夹下的_config.yml文件下配置：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Melody-Fair/Melody-Fair.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>2、hexo g   生成部署文件<br>3、hexo d   进行相关部署<br>部署完成就能通过你的github进行访问了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017年4月份进行了博客的部署，因为今天想着好久没有发布文章了，进行部署后，发现博客样式变了，索性就重新部署了一下&lt;br&gt;
    
    </summary>
    
      <category term="Blogs" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/Blogs/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>数据库序列</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BA%8F%E5%88%97/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/数据库序列/</id>
    <published>2017-12-25T16:00:00.000Z</published>
    <updated>2017-12-26T12:55:53.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库序列"><a href="#数据库序列" class="headerlink" title="数据库序列"></a>数据库序列</h2><p>在ORACLE数据库中，什么是序列呢？它的用途是什么？序列其实是序列号生成器，可以为表中的行自动生成序列号，产生一组等间隔的数值。（类型为数字），其主要的用途是生成表的主键值，可以在插入语句中引用，也可以通过查询检查当前值，或使序列增加至下一个值。<br><a id="more"></a><br>创建序列:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">创建序列需要CREATE SEQUENCE系统权限。序列的创建语法如下：</span><br><span class="line">CREATE SEQUENCE 序列名 </span><br><span class="line">[INCREMENT BY n] </span><br><span class="line">[START WITH n] </span><br><span class="line">[&#123;MAXVALUE/ MINVALUE n|NOMAXVALUE&#125;] [] </span><br><span class="line">[&#123;CACHE n|NOCACHE&#125;];</span><br></pre></td></tr></table></figure></p><p>说明:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">INCREMENT BY 用于定义序列的步长，如果省略，则默认为1，如果出现负值，则代表序列的值是按照此步长递减的。</span><br><span class="line"></span><br><span class="line">START WITH 定义序列的初始值(即产生的第一个值)，默认为1。</span><br><span class="line"></span><br><span class="line">MAXVALUE 定义序列生成器能产生的最大值。选项NOMAXVALUE是默认选项，代表没有最大值定义，这时对于递增序列，系统能够产生的最大值是10的27次方;对于递减序列，最大值是-1。</span><br><span class="line"></span><br><span class="line">MINVALUE定义序列生成器能产生的最小值。选项NOMAXVALUE是默认选项，代表没有最小值定义，这时对于递减序列，系统能够产生的最小值是?10的26次方;对于递增序列，最小值是1。</span><br><span class="line">cache讲解：</span><br><span class="line"></span><br><span class="line">如果指定CACHE值，Oracle就可以预先在内存里面放置一些Sequence，这样存取的快些。</span><br><span class="line">cache里面的取完后，Oracle自动再取一组到cache。</span><br><span class="line">使用cache或许会跳号， 比如数据库突然不正常down掉（shutdown abort),cache中的Sequence就会丢失。</span><br><span class="line">举个例子：比如你的sequence中cache 100，那当你sequence取到90时突然断电，那么在你重启数据库后，sequence的值将从101开始。</span><br><span class="line"></span><br><span class="line">如果指定NOCACHE值，Oracle就不会预先在内存里面存放Sequence，当然这也就可以避免数据库不正常down掉的sequence丢失。</span><br><span class="line">不过会产生一些问题：创建nocache   sequence在高并发访问时，容易导致rowcache lock等待事件，</span><br><span class="line">主要原因是每次获取nextval时都需要修改rowcache中的字典信息。</span><br><span class="line"></span><br><span class="line">使用nocache  sequence，还会导致如下问题:</span><br><span class="line">由于每次修改字典信息都需要commit,可能导致<span class="built_in">log</span> file sync等待，nocache sequence在RAC环境下，</span><br><span class="line">会对基于sequence生成的列创建的索引造成实例间大量索引块争用</span><br><span class="line">基于以上问题,避免创建nocache sequence。</span><br></pre></td></tr></table></figure></p><p>sequence相关保护机制：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">row cache lock：在调用sequence.nextval情况下需要修改数据字典时发生，对应rowcache lock事件</span><br><span class="line">SQ lock：在内存缓存(并非rowcache)上获取sequence.nextval时发生，对应enq:SQ-contention事件</span><br><span class="line">SV lock：RAC环境下获取cache+order属性的sequence.nextval时发生，对应DFS lock handle事件</span><br></pre></td></tr></table></figure><p>创建一个名称为：SEQUENCE_PARAMID 的序列：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE SEQUENCE SEQUENCE_PARAMID</span><br><span class="line">INCREMENT BY 1</span><br><span class="line">MINVALUE 100001001</span><br><span class="line">MAXVALUE 999999999</span><br><span class="line">NOCYCLE</span><br><span class="line">NOCACHE;</span><br></pre></td></tr></table></figure></p><p>感受：<br>2017年5月份，行内要做学费缴费，银联的POS流水号要传6位不能重复数字，用时间戳不够长度做唯一性识别，所以设计了序列，但是序列的位数怎么确定呢？<br>这里再用到SQL的一个语句：只要不足6位就在前边补0。这个还是周晓靖教我的哈哈，谢谢小静。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select lpad(posSeq.nextval,6,<span class="string">'0'</span>) from dual;</span><br></pre></td></tr></table></figure><p>什么情况下使用cache什么时间上使用nocache?<br>我个人感觉应该尽量使用cache，因为现在的数据库很多都是在高并发的情况下运行的，首先这样可以搞性能，并且也不会产生rowcache lock等待事件。<br>可能有些人会担心数据库不正常的down掉会产生序列号间断，但这也是很少的情况。当然如果你的业务要求是绝不能产生间断的序列号，那就要使用nochache了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据库序列&quot;&gt;&lt;a href=&quot;#数据库序列&quot; class=&quot;headerlink&quot; title=&quot;数据库序列&quot;&gt;&lt;/a&gt;数据库序列&lt;/h2&gt;&lt;p&gt;在ORACLE数据库中，什么是序列呢？它的用途是什么？序列其实是序列号生成器，可以为表中的行自动生成序列号，产生一组等间隔的数值。（类型为数字），其主要的用途是生成表的主键值，可以在插入语句中引用，也可以通过查询检查当前值，或使序列增加至下一个值。&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>项目部署（一） VMware14虚拟机安装</title>
    <link href="https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%EF%BC%88%E4%B8%80%EF%BC%89%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/hzxblogs/hzxblogs.github.io.git/2017/12/26/项目部署（一）虚拟机的安装/</id>
    <published>2017-12-25T16:00:00.000Z</published>
    <updated>2017-12-26T12:56:20.282Z</updated>
    
    <content type="html"><![CDATA[<p>因为本人是Windows系统爱好者，mac系统就不进行讲解了，请大家参照别的博客，谢谢。<br><a id="more"></a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>安装VMware1464位链接：<a href="https://pan.baidu.com/s/1i4G8HLz" target="_blank" rel="noopener">https://pan.baidu.com/s/1i4G8HLz</a> 密码：j5tg<br>安装centos7系统镜像64位链接：<a href="https://pan.baidu.com/s/1nv5l23n" target="_blank" rel="noopener">https://pan.baidu.com/s/1nv5l23n</a> 密码：ueeg</p><h3 id="解压安装包进行安装"><a href="#解压安装包进行安装" class="headerlink" title="解压安装包进行安装"></a>解压安装包进行安装</h3><p>![1.png-68.2kB][1]<br>![2.png-47.4kB][2]<br>![3.png-43.6kB][3]<br>![4.png-39kB][4]<br>![5.png-31.9kB][5]<br>![6.png-34.6kB][6]<br>![7.png-67.9kB][7]<br>![8.png-36.6kB][8]<br>![9.png-65.6kB][9]<br>密钥请在云盘上获取。</p><h3 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h3><p> ![2.png-56.8kB][10]<br> ![3.png-34.1kB][11]<br> ![4.png-35.3kB][12]<br> ![5.png-33.7kB][13]<br> ![6.png-29.7kB][14]<br> ![7.png-28.7kB][15]<br> ![8.png-35.7kB][16]<br> ![9.png-35.4kB][17]<br> ![10.png-30.3kB][18]<br> ![11.png-34.3kB][19]<br> ![12.png-37.3kB][20]<br> ![13.png-30.3kB][21]<br> ![14.png-35.7kB][22]<br> ![15.png-73.6kB][23]<br> ![16.png-70.8kB][24]<br> ![17.png-35.7kB][25]<br>  [1]: <a href="http://static.zybuluo.com/Melody-Fair/cty2jyazt0hnrnt9ksgx7ynp/1.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/cty2jyazt0hnrnt9ksgx7ynp/1.png</a><br>  [2]: <a href="http://static.zybuluo.com/Melody-Fair/aslwyjh187hl55cu4v3br37l/2.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/aslwyjh187hl55cu4v3br37l/2.png</a><br>  [3]: <a href="http://static.zybuluo.com/Melody-Fair/jdwa4ldhyxtqvd4y101tprzy/3.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/jdwa4ldhyxtqvd4y101tprzy/3.png</a><br>  [4]: <a href="http://static.zybuluo.com/Melody-Fair/fcs1j5uhjvurizozg1gd8hu5/4.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/fcs1j5uhjvurizozg1gd8hu5/4.png</a><br>  [5]: <a href="http://static.zybuluo.com/Melody-Fair/681xrogoolc8u1ngnxu4ojhg/5.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/681xrogoolc8u1ngnxu4ojhg/5.png</a><br>  [6]: <a href="http://static.zybuluo.com/Melody-Fair/k75bzjlcnrytkto1vxxr87jy/6.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/k75bzjlcnrytkto1vxxr87jy/6.png</a><br>  [7]: <a href="http://static.zybuluo.com/Melody-Fair/azmi9goqk4nuz5jnfsoa8w2a/7.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/azmi9goqk4nuz5jnfsoa8w2a/7.png</a><br>  [8]: <a href="http://static.zybuluo.com/Melody-Fair/0p3cjlaxqbd4kka2zpmg70k2/8.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/0p3cjlaxqbd4kka2zpmg70k2/8.png</a><br>  [9]: <a href="http://static.zybuluo.com/Melody-Fair/u5kkv3fxfqky4pr4m7lny0yf/9.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/u5kkv3fxfqky4pr4m7lny0yf/9.png</a><br>  [10]: <a href="http://static.zybuluo.com/Melody-Fair/tz2aym7ii1p7uif32nf7gg2k/2.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/tz2aym7ii1p7uif32nf7gg2k/2.png</a><br>  [11]: <a href="http://static.zybuluo.com/Melody-Fair/0nrr11gdl3sfjir0i06zca98/3.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/0nrr11gdl3sfjir0i06zca98/3.png</a><br>  [12]: <a href="http://static.zybuluo.com/Melody-Fair/v440pym5f7v8yhgysh9df2zg/4.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/v440pym5f7v8yhgysh9df2zg/4.png</a><br>  [13]: <a href="http://static.zybuluo.com/Melody-Fair/i4tfedo00cu0rrg4nx1c1hfv/5.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/i4tfedo00cu0rrg4nx1c1hfv/5.png</a><br>  [14]: <a href="http://static.zybuluo.com/Melody-Fair/wimonudykmn53lq591fbxeeo/6.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/wimonudykmn53lq591fbxeeo/6.png</a><br>  [15]: <a href="http://static.zybuluo.com/Melody-Fair/lmqal3burm4ada58kzv56s3x/7.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/lmqal3burm4ada58kzv56s3x/7.png</a><br>  [16]: <a href="http://static.zybuluo.com/Melody-Fair/d3qlqrya0y56ly372mb33jg3/8.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/d3qlqrya0y56ly372mb33jg3/8.png</a><br>  [17]: <a href="http://static.zybuluo.com/Melody-Fair/e2glyuqyfy7rhb9yhrsgykwq/9.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/e2glyuqyfy7rhb9yhrsgykwq/9.png</a><br>  [18]: <a href="http://static.zybuluo.com/Melody-Fair/xy4n7tipgk94i8dq2pr52gbk/10.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/xy4n7tipgk94i8dq2pr52gbk/10.png</a><br>  [19]: <a href="http://static.zybuluo.com/Melody-Fair/dwy4iff2ohu2ojqej7lfya64/11.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/dwy4iff2ohu2ojqej7lfya64/11.png</a><br>  [20]: <a href="http://static.zybuluo.com/Melody-Fair/49vjzpug0n5ajvn6yodvwwiw/12.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/49vjzpug0n5ajvn6yodvwwiw/12.png</a><br>  [21]: <a href="http://static.zybuluo.com/Melody-Fair/0vnrf6hnuxnbofpz6gx1w3jr/13.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/0vnrf6hnuxnbofpz6gx1w3jr/13.png</a><br>  [22]: <a href="http://static.zybuluo.com/Melody-Fair/b73b8or3nf2rr3ltffmpb6tg/14.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/b73b8or3nf2rr3ltffmpb6tg/14.png</a><br>  [23]: <a href="http://static.zybuluo.com/Melody-Fair/ybvnbnv7hn3lznrdwwjv7qhl/15.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/ybvnbnv7hn3lznrdwwjv7qhl/15.png</a><br>  [24]: <a href="http://static.zybuluo.com/Melody-Fair/is5onsdrwb5022l9kzkjjl0b/16.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/is5onsdrwb5022l9kzkjjl0b/16.png</a><br>  [25]: <a href="http://static.zybuluo.com/Melody-Fair/xdq5ij2xnucrpc1pcmj8877s/17.png" target="_blank" rel="noopener">http://static.zybuluo.com/Melody-Fair/xdq5ij2xnucrpc1pcmj8877s/17.png</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为本人是Windows系统爱好者，mac系统就不进行讲解了，请大家参照别的博客，谢谢。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟机" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="学习记录" scheme="https://github.com/hzxblogs/hzxblogs.github.io.git/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
